/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode res = new ListNode(0);;
        if(l1==null||l2==null){
            return res.next;
        }
        int highValue = 0;
        ListNode node  = res;
        while(l1!=null&&l2!=null){
            int tmp = l1.val+l2.val+highValue > 9 ? l1.val+l2.val+highValue-10: l1.val+l2.val+highValue;
            highValue = l1.val+l2.val+highValue > 9 ? 1:0;
            res.next = new ListNode(tmp);
            l1 = l1.next;
            l2 = l2.next;
            res = res.next;
        }
        
        while(l1!=null){
            if(highValue==1){
                res.next = new ListNode(l1.val+1);
                highValue = 0;
            }else{
                res.next = new ListNode(l1.val);
            }
            
            l1 = l1.next;
            res = res.next;
        }
        
        while(l2!=null){
            if(highValue==1){
                if(l2.val+1>9){
                    res
                }
                res.next = new ListNode(l2.val+1);
                highValue = 0;
            }else{
                res.next = new ListNode(l2.val);
            }
            l2 = l2.next;
            res = res.next;
            
        }
        
        if(res.val>9){
            if(highValue == 1){
                res.next = new ListNode(res.val-10+1);
            }else{
                res.next = new ListNode(res.val-10);
            }
        }else{
            if(highValue == 1){
                res.next = new ListNode(1);
            }
        }
        return node.next;
    }
}